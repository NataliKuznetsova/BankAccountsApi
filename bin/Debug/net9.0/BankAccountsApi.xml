<?xml version="1.0"?>
<doc>
    <assembly>
        <name>BankAccountsApi</name>
    </assembly>
    <members>
        <member name="T:BankAccountsApi.Controllers.AccountsController">
            <summary>
            Контроллер для работы со счетами.
            </summary>
        </member>
        <member name="M:BankAccountsApi.Controllers.AccountsController.#ctor(MediatR.IMediator)">
            <summary>
            Контроллер для работы со счетами.
            </summary>
        </member>
        <member name="M:BankAccountsApi.Controllers.AccountsController.CreateAccount(BankAccountsApi.Features.Account.Commands.CreateAccountCommand)">
            <summary>
            Создание нового счёта
            </summary>
            <param name="command">Данные для создания счёта</param>
            <returns>Возвращает идентификатор созданного счета</returns>
        </member>
        <member name="M:BankAccountsApi.Controllers.AccountsController.GetAccountById(System.Guid)">
            <summary>
            Получение счёта
            </summary>
            <param name="accountId">Id счёта</param>
            <returns>Счёт клиента</returns>
        </member>
        <member name="M:BankAccountsApi.Controllers.AccountsController.DeleteAccount(System.Guid)">
            <summary>
            Удаляет счет по идентификатору.
            </summary>
            <param name="id">Идентификатор счета</param>
        </member>
        <member name="M:BankAccountsApi.Controllers.AccountsController.GetAccounts(System.Guid)">
            <summary>
            Получить список всех счетов
            </summary>
            <param name="ownerId">Идентификатор пользователя</param>
            <returns>Список счетов</returns>
        </member>
        <member name="M:BankAccountsApi.Controllers.AccountsController.UpdateAccount(System.Guid,BankAccountsApi.Features.Account.Commands.UpdateAccountCommand)">
            <summary>
            Обновление счета
            </summary>
            <param name="id">Идентификатор счёта</param>
            <param name="command">Данные для обновления</param>
            <returns>204 NoContent</returns>
        </member>
        <member name="M:BankAccountsApi.Controllers.AccountsController.HasAccount(System.Guid)">
            <summary>
            Проверка на наличие счета
            </summary>
            <param name="ownerId">Идентификатор клиента</param>
            <returns>Результат проверки</returns>
        </member>
        <member name="T:BankAccountsApi.Controllers.ClientsController">
            <summary>
            Контроллер для работы с клиентами
            </summary>
        </member>
        <member name="M:BankAccountsApi.Controllers.ClientsController.#ctor(MediatR.IMediator)">
            <summary>
            Контроллер для работы с клиентами
            </summary>
        </member>
        <member name="M:BankAccountsApi.Controllers.ClientsController.CheckClientExists(System.Guid)">
            <summary>
            Проверить, существует ли клиент с указанным Id
            </summary>
            <param name="id">Идентификатор клиента</param>
            <returns>True, если клиент существует, иначе False</returns>
        </member>
        <member name="M:BankAccountsApi.Controllers.ClientsController.CreateClient(BankAccountsApi.Features.Clients.Commands.CreateClientCommand)">
            <summary>
            Создать нового клиента
            </summary>
            <param name="command">Данные для создания клиента</param>
            <returns>Идентификатор нового клиента</returns>
        </member>
        <member name="M:BankAccountsApi.Controllers.ClientsController.GetClientById(System.Guid)">
            <summary>
            Получить клиента по Id
            </summary>
            <param name="id">Идентификатор клиента</param>
            <returns>Данные клиента</returns>
        </member>
        <member name="M:BankAccountsApi.Controllers.ClientsController.UpdateClient(System.Guid,BankAccountsApi.Features.Clients.Commands.UpdateClientCommand)">
            <summary>
            Обновить клиента
            </summary>
            <param name="id">Идентификатор клиента</param>
            <param name="command">Данные для обновления</param>
            <returns>204 NoContent или ошибка</returns>
        </member>
        <member name="T:BankAccountsApi.Controllers.CurrencyController">
            <summary>
            Контроллер для работы с валютами
            </summary>
        </member>
        <member name="M:BankAccountsApi.Controllers.CurrencyController.#ctor(MediatR.IMediator)">
            <summary>
            Контроллер для работы с валютами
            </summary>
        </member>
        <member name="M:BankAccountsApi.Controllers.CurrencyController.CheckExists(System.String)">
            <summary>
            Проверить, поддерживается ли валюта по коду ISO 4217
            </summary>
            <param name="code">Код валюты в формате ISO 4217</param>
            <returns>Возвращает true, если валюта поддерживается, иначе false</returns>
        </member>
        <member name="M:BankAccountsApi.Controllers.TransactionsController.Transfer(BankAccountsApi.Features.Transactions.Commands.ExecuteTransferCommand)">
            <summary>
            Выполнить перевод между счетами
            </summary>
            <param name="command">Данные перевода</param>
            <returns>Код респонса</returns>
            <response code="200">Перевод успешно выполнен.</response>
            <response code="400">Некорректные данные перевода.</response>
        </member>
        <member name="M:BankAccountsApi.Controllers.TransactionsController.GetStatement(System.Guid)">
            <summary>
            Получить выписку по счёту
            </summary>
            <param name="accountId">Идентификатор счета</param>
            <returns>Выписка</returns>
        </member>
        <member name="M:BankAccountsApi.Controllers.TransactionsController.RegisterTransaction(BankAccountsApi.Features.Transactions.Commands.RegisterTransactionCommand)">
            <summary>
            Регистрация транзакции по счету
            </summary>
            <param name="command">Данные транзакции</param>
            <returns>Идентификатор транзакции</returns>
        </member>
        <member name="T:BankAccountsApi.Features.Account.Commands.CreateAccountCommand">
            <summary>
            Команда для создания нового счета
            </summary>
        </member>
        <member name="P:BankAccountsApi.Features.Account.Commands.DeleteAccountCommand.Id">
            <summary>
            Идентификатор счета
            </summary>
        </member>
        <member name="T:BankAccountsApi.Features.Account.Commands.UpdateAccountCommand">
            <summary>
            Команда для обновления данных счета.
            </summary>
        </member>
        <member name="T:BankAccountsApi.Features.Account.Enums.AccountType">
            <summary>
            Тип счёта
            </summary>
        </member>
        <member name="T:BankAccountsApi.Features.Account.Handlers.CreateAccountHandler">
            <summary>
            Хэндлер для создания счета
            </summary>
        </member>
        <member name="M:BankAccountsApi.Features.Account.Handlers.CreateAccountHandler.#ctor(BankAccountsApi.Storage.Interfaces.IAccountsRepository,BankAccountsApi.Storage.Interfaces.IClientsRepository)">
            <summary>
            Хэндлер для создания счета
            </summary>
        </member>
        <member name="T:BankAccountsApi.Features.Account.Handlers.GetAccountByIdHandler">
            <summary>
            Хэндлер для получения информации о счете
            </summary>
        </member>
        <member name="M:BankAccountsApi.Features.Account.Handlers.GetAccountByIdHandler.#ctor(BankAccountsApi.Storage.Interfaces.IAccountsRepository)">
            <summary>
            Хэндлер для получения информации о счете
            </summary>
        </member>
        <member name="T:BankAccountsApi.Features.Account.Handlers.GetAccountsByOwnerIdHandler">
            <summary>
            Получение счетов пользователя
            </summary>
        </member>
        <member name="T:BankAccountsApi.Features.Account.Queries.GetAccountByIdQuery">
            <summary>
            Запрос на получение инфы о счёте
            </summary>
        </member>
        <member name="M:BankAccountsApi.Features.Account.Queries.GetAccountByIdQuery.#ctor(System.Guid)">
            <summary>
            Запрос на получение инфы о счёте
            </summary>
        </member>
        <member name="T:BankAccountsApi.Features.Account.Queries.GetAccountsQuery">
            <summary>
            Запрос на получение списка всех счетов
            </summary>
        </member>
        <member name="T:BankAccountsApi.Features.Account.Queries.HasAccountByOwnerIdQuery">
            <summary>
            Проверка наличия счета по owner id
            </summary>
        </member>
        <member name="M:BankAccountsApi.Features.Account.Queries.HasAccountByOwnerIdQuery.#ctor(System.Guid)">
            <summary>
            Проверка наличия счета по owner id
            </summary>
        </member>
        <member name="T:BankAccountsApi.Features.Account.Validators.CreateAccountValidator">
            <summary>
            Валидатор для CreateAccountCommand
            </summary>
        </member>
        <member name="T:BankAccountsApi.Features.Clients.Commands.CreateClientCommand">
            <summary>
            Команда для создания нового клиента
            </summary>
        </member>
        <member name="P:BankAccountsApi.Features.Clients.Commands.CreateClientCommand.Name">
            <summary>
            Имя
            </summary>
        </member>
        <member name="P:BankAccountsApi.Features.Clients.Commands.CreateClientCommand.LastName">
            <summary>
            Фамилия
            </summary>
        </member>
        <member name="P:BankAccountsApi.Features.Clients.Commands.UpdateClientCommand.Name">
            <summary>
            Имя
            </summary>
        </member>
        <member name="P:BankAccountsApi.Features.Clients.Commands.UpdateClientCommand.LastName">
            <summary>
            Фамилия
            </summary>
        </member>
        <member name="T:BankAccountsApi.Features.Clients.Handlers.CheckClientExistsHandler">
            <summary>
            Запрос проверки клиента
            </summary>
        </member>
        <member name="M:BankAccountsApi.Features.Clients.Handlers.CheckClientExistsHandler.#ctor(BankAccountsApi.Storage.Interfaces.IClientsRepository)">
            <summary>
            Запрос проверки клиента
            </summary>
        </member>
        <member name="T:BankAccountsApi.Features.Clients.Queries.CheckClientExistsQuery">
            <summary>
            Запрос на проверку существования клиента
            </summary>
        </member>
        <member name="M:BankAccountsApi.Features.Clients.Queries.CheckClientExistsQuery.#ctor(System.Guid)">
            <summary>
            Запрос на проверку существования клиента
            </summary>
        </member>
        <member name="T:BankAccountsApi.Features.Clients.Queries.GetClientByIdQuery">
            <summary>
            Запрос на получение клиента по идентификатору
            </summary>
        </member>
        <member name="M:BankAccountsApi.Features.Clients.Queries.GetClientByIdQuery.#ctor(System.Guid)">
            <summary>
            Запрос на получение клиента по идентификатору
            </summary>
        </member>
        <member name="P:BankAccountsApi.Features.Clients.Queries.GetClientByIdQuery.Id">
            <summary>
            Идентификатор клиента
            </summary>
        </member>
        <member name="T:BankAccountsApi.Features.Transactions.Commands.ExecuteTransferCommand">
            <summary>
            Перевод между счетами
            </summary>
        </member>
        <member name="P:BankAccountsApi.Features.Transactions.Commands.ExecuteTransferCommand.FromAccountId">
            <summary>
            Счёт отправителя
            </summary>
        </member>
        <member name="P:BankAccountsApi.Features.Transactions.Commands.ExecuteTransferCommand.ToAccountId">
            <summary>
            Счёт получателя
            </summary>
        </member>
        <member name="P:BankAccountsApi.Features.Transactions.Commands.ExecuteTransferCommand.Amount">
            <summary>
            Сумма
            </summary>
        </member>
        <member name="P:BankAccountsApi.Features.Transactions.Commands.ExecuteTransferCommand.Currency">
            <summary>
            Валюта
            </summary>
        </member>
        <member name="P:BankAccountsApi.Features.Transactions.Commands.ExecuteTransferCommand.Description">
            <summary>
            Описание
            </summary>
        </member>
        <member name="T:BankAccountsApi.Features.Transactions.Commands.RegisterTransactionCommand">
            <summary>
            Регистрация транзакции
            </summary>
        </member>
        <member name="T:BankAccountsApi.Features.Transactions.Enums.TransactionType">
            <summary>
            Тип транзакции
            </summary>
        </member>
        <member name="T:BankAccountsApi.Features.Transactions.Validators.ExecuteTransferValidator">
            <summary>
            Валидация перевода денег
            </summary>
        </member>
        <member name="T:BankAccountsApi.Infrastructure.MbError">
            <summary>
            Ошибка
            </summary>
        </member>
        <member name="M:BankAccountsApi.Infrastructure.MbError.#ctor(System.String,System.String,System.String)">
            <summary>
            Ошибка
            </summary>
        </member>
        <member name="P:BankAccountsApi.Infrastructure.MbError.Code">
            <summary>
            Код ошибки
            </summary>
        </member>
        <member name="P:BankAccountsApi.Infrastructure.MbError.Field">
            <summary>
            Поле с ошибкой
            </summary>
        </member>
        <member name="P:BankAccountsApi.Infrastructure.MbError.Message">
            <summary>
            Сообщение
            </summary>
        </member>
        <member name="T:BankAccountsApi.Infrastructure.MbResult`1">
            <summary>
            Результат выполнения операции
            </summary>
            <typeparam name="T">Тип возвращаемого значения</typeparam>
        </member>
        <member name="T:BankAccountsApi.Migrations.InitialCreate">
            <inheritdoc />
        </member>
        <member name="M:BankAccountsApi.Migrations.InitialCreate.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:BankAccountsApi.Migrations.InitialCreate.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:BankAccountsApi.Migrations.InitialCreate.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:BankAccountsApi.Migrations.AddIndexes">
            <inheritdoc />
        </member>
        <member name="M:BankAccountsApi.Migrations.AddIndexes.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:BankAccountsApi.Migrations.AddIndexes.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:BankAccountsApi.Migrations.AddIndexes.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:BankAccountsApi.Migrations.AddAccrueInterestProcedure">
            <inheritdoc />
        </member>
        <member name="M:BankAccountsApi.Migrations.AddAccrueInterestProcedure.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:BankAccountsApi.Migrations.AddAccrueInterestProcedure.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:BankAccountsApi.Migrations.AddAccrueInterestProcedure.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:BankAccountsApi.Migrations.AddNew">
            <inheritdoc />
        </member>
        <member name="M:BankAccountsApi.Migrations.AddNew.Up(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:BankAccountsApi.Migrations.AddNew.Down(Microsoft.EntityFrameworkCore.Migrations.MigrationBuilder)">
            <inheritdoc />
        </member>
        <member name="M:BankAccountsApi.Migrations.AddNew.BuildTargetModel(Microsoft.EntityFrameworkCore.ModelBuilder)">
            <inheritdoc />
        </member>
        <member name="T:BankAccountsApi.Models.Account">
            <summary>
            Модель счёта
            </summary>
        </member>
        <member name="P:BankAccountsApi.Models.Client.Id">
            <summary>
            Идентификатор клиента
            </summary>
        </member>
        <member name="T:BankAccountsApi.Models.Statement">
            <summary>
            Выписка по счету
            </summary>
        </member>
        <member name="P:BankAccountsApi.Models.Statement.AccountId">
            <summary>
            Идентификатор счета
            </summary>
        </member>
        <member name="P:BankAccountsApi.Models.Statement.Transactions">
            <summary>
            Список транзакций
            </summary>
        </member>
        <member name="T:BankAccountsApi.Storage.Interfaces.IAccountsRepository">
            <summary>
            Хранилище для работы со счетами
            </summary>
        </member>
        <member name="M:BankAccountsApi.Storage.Interfaces.IAccountsRepository.CreateAsync(BankAccountsApi.Models.Account)">
            <summary>
            Добавить новый счёт
            </summary>
        </member>
        <member name="M:BankAccountsApi.Storage.Interfaces.IAccountsRepository.GetByIdAsync(System.Guid)">
            <summary>
            Получить счёт по идентификатору
            </summary>
        </member>
        <member name="M:BankAccountsApi.Storage.Interfaces.IAccountsRepository.GetByOwnerIdAsync(System.Guid)">
            <summary>
            Получить все счета пользователя
            </summary>
        </member>
        <member name="M:BankAccountsApi.Storage.Interfaces.IAccountsRepository.UpdateAsync(BankAccountsApi.Models.Account)">
            <summary>
            Обновить существующий счёт
            </summary>
        </member>
        <member name="M:BankAccountsApi.Storage.Interfaces.IAccountsRepository.DeleteAsync(System.Guid)">
            <summary>
            Удалить счёт по идентификатору
            </summary>
        </member>
        <member name="T:BankAccountsApi.Storage.Interfaces.IClientsRepository">
            <summary>
            Хранилище для работы с клиентами
            </summary>
        </member>
        <member name="M:BankAccountsApi.Storage.Interfaces.IClientsRepository.AddAsync(BankAccountsApi.Models.Client)">
            <summary>
            Добавить клиента
            </summary>
        </member>
        <member name="M:BankAccountsApi.Storage.Interfaces.IClientsRepository.ExistsAsync(System.Guid)">
            <summary>
            Проверить существование клиента по идентификатору
            </summary>
        </member>
        <member name="M:BankAccountsApi.Storage.Interfaces.IClientsRepository.GetByIdAsync(System.Guid)">
            <summary>
            Получить клиента по идентификатору
            </summary>
        </member>
        <member name="M:BankAccountsApi.Storage.Interfaces.IClientsRepository.UpdateAsync(BankAccountsApi.Models.Client)">
            <summary>
            Обновить информацию о клиенте
            </summary>
        </member>
        <member name="M:BankAccountsApi.Storage.Interfaces.ICurrencyRepository.ExistsAsync(System.String)">
            <summary>
            Проверяет, поддерживается ли валюта
            </summary>
        </member>
        <member name="M:BankAccountsApi.Storage.Interfaces.ITransactionsRepository.GetByAccountIdAsync(System.Guid)">
            <summary>
            Получить все транзакции по счёту
            </summary>
        </member>
        <member name="M:BankAccountsApi.Storage.Interfaces.ITransactionsRepository.AddAsync(BankAccountsApi.Models.Transaction)">
            <summary>
            Добавить новую транзакцию
            </summary>
        </member>
    </members>
</doc>
